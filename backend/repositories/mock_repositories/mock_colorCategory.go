// Code generated by MockGen. DO NOT EDIT.
// Source: backend/repositories/colorCategory.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockColorCategoryRepository is a mock of ColorCategoryRepository interface
type MockColorCategoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockColorCategoryRepositoryMockRecorder
}

// MockColorCategoryRepositoryMockRecorder is the mock recorder for MockColorCategoryRepository
type MockColorCategoryRepositoryMockRecorder struct {
	mock *MockColorCategoryRepository
}

// NewMockColorCategoryRepository creates a new mock instance
func NewMockColorCategoryRepository(ctrl *gomock.Controller) *MockColorCategoryRepository {
	mock := &MockColorCategoryRepository{ctrl: ctrl}
	mock.recorder = &MockColorCategoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockColorCategoryRepository) EXPECT() *MockColorCategoryRepositoryMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockColorCategoryRepository) Add(name, user string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", name, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add
func (mr *MockColorCategoryRepositoryMockRecorder) Add(name, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockColorCategoryRepository)(nil).Add), name, user)
}

// GetAll mocks base method
func (m *MockColorCategoryRepository) GetAll() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetAll indicates an expected call of GetAll
func (mr *MockColorCategoryRepositoryMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockColorCategoryRepository)(nil).GetAll))
}
