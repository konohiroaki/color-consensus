// Code generated by MockGen. DO NOT EDIT.
// Source: backend/services/language.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLanguageService is a mock of LanguageService interface
type MockLanguageService struct {
	ctrl     *gomock.Controller
	recorder *MockLanguageServiceMockRecorder
}

// MockLanguageServiceMockRecorder is the mock recorder for MockLanguageService
type MockLanguageServiceMockRecorder struct {
	mock *MockLanguageService
}

// NewMockLanguageService creates a new mock instance
func NewMockLanguageService(ctrl *gomock.Controller) *MockLanguageService {
	mock := &MockLanguageService{ctrl: ctrl}
	mock.recorder = &MockLanguageServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLanguageService) EXPECT() *MockLanguageServiceMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockLanguageService) GetAll() map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetAll indicates an expected call of GetAll
func (mr *MockLanguageServiceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockLanguageService)(nil).GetAll))
}
